// ImageJ: Batch Fluorescence Quantification
  // Multiple folders

// Copy and paste code below into the macro window:

// ====================================================================================================================
// =============================================== Configure Variables ================================================
// ===================== Adjust the code in this section to match the details of your experiment ======================
// ====================================================================================================================

  // Activate batch mode
    // This will prevent the GUI from showing the images opening, processing, and closing. 
      // This is especially useful for individuals with sensitivity to flashing lights. See the Log window for progress while the macro is running.

setBatchMode(true);  

// ====================================================================================================================
  // EDIT: Set the pathway to the input folder containing subfolders of images AND output folder where processed images to be saved
    // Make sure the pathway is enclosed with double quotes and a semicolon at the end of the line!

inputFolder = getDirectory("/pathway/to/folder/of/images");
outputFolder = getDirectory("/pathway/to/output/folder");

// ====================================================================================================================
  // EDIT (optional): Set the measurements 
  // See for measurement options: https://docs.google.com/document/d/1IrlFiODt2iRYPPjTQJiHGo9cTklRSA_u_fXa7nv2Uzk/edit?tab=t.xytk5djbveia 
    // Current settings: Area, mean grey value, integrated density, display label, no redirection, 3 decimal places 

Measurements = "area mean integrated display redirect=None decimal=3"

// ====================================================================================================================
  // EDIT: Set scales according to the microscope. See Microscope Scales document for scale info of some scopes
    // Pixel aspect ratio is set to 1.0 by default

ScalePixels = 1300;                  // Distance in pixels
ScaleDistance = 435;                 // Known distance
ScalePAR = 1.0;                      // Pixel Aspect Ratio (this will almost always be 1.0)
ScaleUnit = "um";                    // Unit of measurement
Magnification = "20x";               // Magnification
Microscope = “Lepper_Zeiss”          // Microscope 

// ====================================================================================================================
// =========================================== Run Macro to process images ============================================
// ===================================== DO NOT change any code in this section! ======================================
// ====================================================================================================================

  // Get a list of all subfolders

subfolders = getFileList(parentFolder);

// ====================================================================================================================
  // Get a list of all files

for (sf = 0; sf < subfolders.length; sf++) {
  inputFolder = parentFolder + subfolders[sf];
  if (!File.isDirectory(inputFolder)) continue;
  print("Processing folder: " + inputFolder);

  list = getFileList(inputFolder);

// ====================================================================================================================
  // Open images

for (i = 0; i < list.length; i++) {
  filePath = inputFolder + "/" + list[i];
  if (endsWith(list[i], ".tif") || endsWith(list[i], ".tiff")) {
    open(filePath);
  // Set scale 
      run("Set Scale...", "distance=" + ScaleDistance + " known=" + ScaleKnown + " pixel=" + ScalePAR + " unit=" + ScaleUnit);
  // Set Measurements
      run(“Set Measurements…”, Measurements);
  // Measure images 
      run("Measure");
  // Close image and move on to the next
      close(); 
    }
  }
}

// ====================================================================================================================
  // Save measurement results as a .csv
saveAs("Results", outputFolder + "Results.csv");


